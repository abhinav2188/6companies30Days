/*
question : https://leetcode.com/problems/find-in-mountain-array/
submission : https://leetcode.com/submissions/detail/629023479/
*/

/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */

// TC ~ O(logn*3)
// SC ~ O(1)

class Solution {

    public int findInMountainArray(int target, MountainArray mountainArr) {
        int j = findMountainIndex(mountainArr);
        // System.out.println("mi="+j);
        int k = findIndex(mountainArr, 0, j, target, true);
        if(k!=-1) return k;
        else k = findIndex(mountainArr, j+1, mountainArr.length()-1, target, false);
        return k;
    }

    private int findMountainIndex(MountainArray arr){
        int start = 1;
        int end = arr.length()-2;
        while(start <= end){
            int mid = start + (end - start)/2;
            int prevEl = arr.get(mid-1);
            int el = arr.get(mid);
            int nextEl = arr.get(mid+1);
            if( prevEl < el && el > nextEl )
                return mid;
            else if( prevEl < el && el < nextEl)
                start = mid+1;
            else
                end = mid-1;
        }
        return -1;
    }

    private int findIndex(MountainArray arr, int start, int end, int target, boolean isInc){
        while(start <= end){
            int mid = start + (end-start)/2;
            int el = arr.get(mid);
            if(target < el) {
                if(isInc) end = mid-1;
                else start = mid+1;
            }
            else if(target > el) {
                if(isInc) start = mid+1;
                else end = mid-1;
            }
            else return mid;
        }
        return -1;
    }

}