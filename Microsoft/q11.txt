/*
question : https://practice.geeksforgeeks.org/problems/generate-binary-numbers-1587115620/1/
submission :
https://practice.geeksforgeeks.org/viewSol.php?subId=0b4ceb6a77c36743b3938f1f868f8660&pid=701347&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

import java.util.*;
import java.io.*;
import java.lang.*;

class GFG
{
    public static void main(String args[])
    {
        //Taking input using class Scanner
        Scanner sc = new Scanner(System.in);

        //Taking the number of testcases
        int t = sc.nextInt();

        while(t-- > 0)
        {
            //taking the range
            int n = sc.nextInt();

            //creating an ArrayList
            ArrayList<String> res = new ArrayList<String>();

            //calling the generate method of class solve
            //and storing the result in an ArrayList
            res = new solve().generate(n);

            //printing all the elements of the ArrayList
            for(int i = 0;i<res.size();i++)
                System.out.print(res.get(i) + " ");
            System.out.println();
        }
    }
}// } Driver Code Ends


// TC ~ O(n * logn)
// SC ~ O(n * logn) for output

class solve{

    //Function to generate binary numbers from 1 to N using a queue.
    static ArrayList<String> generate(int N)
    {
        ArrayList<String> ans = new ArrayList<>();
        int b[] = new int[32];
        int k = 0;

        for(int i=1;i<=N;i++){
            int j = 0;
            while(b[j] != 0) b[j++] = 0;
            b[j] = 1;
            k = Math.max(k,j);
            StringBuilder sb = new StringBuilder();
            for(j=k;j>=0;j--)
            sb.append(b[j]);
            ans.add(sb.toString());
        }

        return ans;

    }

}
