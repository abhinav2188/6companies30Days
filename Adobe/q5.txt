/*
question : https://practice.geeksforgeeks.org/problems/express-as-sum-of-power-of-natural-numbers5647/1#
submission :
https://practice.geeksforgeeks.org/viewSol.php?subId=c4996ec370153f5734f90087558c0e8a&pid=705641&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

//Initial Template for Java
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String[] input = new String[2]; 
            input = br.readLine().split(" "); 
            int n = Integer.parseInt(input[0]); 
            int x = Integer.parseInt(input[1]); 
            Solution ob = new Solution();
            System.out.println(ob.numOfWays(n, x));
        }
    }
}
// } Driver Code Ends

// TC ~ O(logn) + O(nlogn)
// SC ~ O(logn) + O(nlogn)

class Solution
{
    static final int M = (int)Math.pow(10,9)+7;
    static int numOfWays(int n, int x)
    {
        List<Integer> nums = new ArrayList<>();
        int i = 1;
        while(true){
            int k = (int)Math.pow(i,x);
            if(k>n) break;
            nums.add(k);
            i++;
        }
        
        // System.out.println(nums);
        
        long dp[] = new long[n+1];
        dp[0] = 1;
        
        for(i=0;i<nums.size();i++){
            long dpNext[] = new long[n+1];
            for(int j=0; j<=n; j++){
                if(nums.get(i) <= j)
                dpNext[j] = (dp[j] + dp[j-nums.get(i)])%M;
                else
                dpNext[j] = dp[j];
            }
            dp = dpNext;
        }
        
        return (int)dp[n];

    }
}

