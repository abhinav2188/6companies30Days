/*
question : https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1#
submission :
https://practice.geeksforgeeks.org/viewSol.php?subId=76fcd14db6728cf8106f72f0e5d5a92d&pid=704573&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String input_line[] = in.readLine().trim().split("\\s+");
            int arr[] = new int[N];
            for(int i = 0;i < N;i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            int x = ob.equalPartition(N, arr);
            if(x == 1)
                System.out.println("YES");
            else
                System.out.println("NO");
        }
    }
}// } Driver Code Ends


// TC ~ O(n*sum(arr))
// SC ~ O(sum(arr))

class Solution{
    static int equalPartition(int N, int arr[])
    {
        int sum = 0;
        for(int a : arr) sum+=a;
        
        if(sum%2 != 0) return 0;
        
        int target = sum/2;
        
        // finding a subset whose sum = target
        
        boolean dp[] = new boolean[target+1];
        // dp[i][j] = true if there is a subset in arr[0-i] whose sum = j
        
        // sum = 0, when 0 elements are there
        dp[0] = true;
        
        for(int i=0;i<N;i++){
            boolean dpNext[] = new boolean[target+1];
            for(int j=0;j<=target;j++){
                if(arr[i]<=j)
                dpNext[j] = dp[j] || dp[j-arr[i]];
                else 
                dpNext[j] = dp[j];
            }
            dp=dpNext;
        }

        return dp[target] ? 1 : 0;
        
    }
}