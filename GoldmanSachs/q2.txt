// Initial Template for Java

/*
question link : 
https://practice.geeksforgeeks.org/problems/overlapping-rectangles1924/1/#
submission link : 
https://practice.geeksforgeeks.org/viewSol.php?subId=f1ae2f3cf43ba18e93af905e145f121d&pid=705474&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String S[] = read.readLine().split(" ");
            int p[] = new int[2];
            int q[] = new int[2];
            int r[] = new int[2];
            int s[] = new int[2];
            p[0] = Integer.parseInt(S[0]);
            p[1] = Integer.parseInt(S[1]);
            q[0] = Integer.parseInt(S[2]);
            q[1] = Integer.parseInt(S[3]);
            r[0] = Integer.parseInt(S[4]);
            r[1] = Integer.parseInt(S[5]);
            s[0] = Integer.parseInt(S[6]);
            s[1] = Integer.parseInt(S[7]);
            Solution ob = new Solution();
            int ans = ob.doOverlap(p, q, r, s);
            System.out.println(ans);
        }
    }
}// } Driver Code Ends


// User function Template for Java

class Solution {
    int doOverlap(int L1[], int R1[], int L2[], int R2[]) {
        // code here
        if(Arrays.equals(L1,L2) || Arrays.equals(L1,R2) ||
          Arrays.equals(R1,L2) || Arrays.equals(R1,R2)) return 1;
        int xOverlap = findOverlap(L1[0],R1[0],L2[0],R2[0]);
        int yOverlap = findOverlap(R1[1],L1[1],R2[1],L2[1]);
        if(xOverlap > 0 && yOverlap > 0) return 1;
        else return 0;
    }
    private int findOverlap(int x1,int x2,int x3,int x4){
        if(x1 > x3) return findOverlap(x3,x4,x1,x2);
        //x1,x2 are 1 interval ; x3,x4 are 1 interval , x1 <= x3
        int overlap[] = new int[2];
        if( x1 == x3 ){
            overlap[0] = x1;
            overlap[1] = Math.min(x2,x4);
        }
        else if( x2 >= x3 ){
            overlap[0] = x3;
            overlap[1] = Math.min(x2,x4);
        }else{
            return 0;
        }
        return overlap[1]-overlap[0]+1;
    }
};