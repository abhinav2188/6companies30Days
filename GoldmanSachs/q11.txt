/*
question link : 
https://practice.geeksforgeeks.org/problems/find-missing-and-repeating2512/1/#
submission link : 
https://practice.geeksforgeeks.org/viewSol.php?subId=6c61db5022cb89f2a4ef38557712aa0e&pid=702678&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

// Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    // Driver code
    public static void main(String[] args) throws Exception {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            String[] str = br.readLine().split(" ");

            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(str[i]);
            }

            int[] ans = new Solve().findTwoElement(a, n);
            System.out.println(ans[0] + " " + ans[1]);
        }
    }
}// } Driver Code Ends


// TC ~ O(n)
// SC ~ O(1)

class Solve {
    int[] findTwoElement(int arr[], int n) {
        int duplicate = 0;
        int missing = 0;
        for(int i=0;i<arr.length;i++){
            while(arr[i]!=i+1){
                if(arr[i] == arr[arr[i]-1]){
                    duplicate = arr[i];
                    break;
                }
                swap(arr,i,arr[i]-1);
            }
        }
        for(int i=0;i<n;i++){
            if(arr[i] != i+1){
                missing = i+1;
                break;
            }
        }
        int ans[] = {duplicate,missing};
        return ans;
        
    }
    
    private void swap(int arr[],int i,int j){
        int tmp = arr[i];
        arr[i] = arr[j];
        arr[j] = tmp;
    }
}

// 0 1 2 3 4
// 1 2 3 4 2

// 4 == 1 ? 
// swap(arr,0,3)


