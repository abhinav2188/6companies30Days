/*
question link : 
https://practice.geeksforgeeks.org/problems/array-pair-sum-divisibility-problem3257/1#
submission link : 
https://practice.geeksforgeeks.org/viewSol.php?subId=331f928bcd4c36b84f6918679c3381eb&pid=704691&user=iil0nty02p8sq5leaeaek3zwro7xll9wbfhxfapk
*/

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while (T-- > 0) {
            String s1 = br.readLine().trim();
            String[] S1 = s1.split(" ");
            int n = Integer.parseInt(S1[0]);
            int k = Integer.parseInt(S1[1]);
            String s2 = br.readLine().trim();
            String[] S2 = s2.split(" ");
            int[] nums = new int[n];
            for (int i = 0; i < n; i++) {
                nums[i] = Integer.parseInt(S2[i]);
            }
            Solution ob = new Solution();
            boolean ans = ob.canPair(nums, k);
            if (ans)
                System.out.println("True");
            else
                System.out.println("False");
        }
    }
}
// } Driver Code Ends


// User function Template for Java

// TC ~ O(n+k)
// SC ~ O(k)

class Solution {
    public boolean canPair(int[] nums, int k) {
        if(nums.length%2!=0) return false;
        // count of nums[i]%k
        int count[] = new int[k];
        for(int i=0;i<nums.length;i++){
            int mod = nums[i]%k;
            count[mod]++;
        }
        // System.out.println(Arrays.toString(count));
        if((count[0]&1)==1) return false;
        int i,j;
        for(i=1,j=k-1;i<j;i++,j--){
            if(count[i]!=count[j]) return false; 
        }
        // System.out.println("i="+i+" j="+j);
        if(i==j && count[i]%2!=0 ) return false;
        return true;
    }
}
// 0,1,2,3,4,5
// [9,5,7,3] k = 6
// [3,5,1,3]

// k = 7
// 0,1,2,3,4,5,6